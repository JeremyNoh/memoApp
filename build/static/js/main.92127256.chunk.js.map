{"version":3,"sources":["const/index.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["shake","arr","position","length","randomIndex","Math","floor","random","_ref","reducedFilter","data","keys","fn","filter","map","el","reduce","acc","key","sleep","milliseconds","Promise","resolve","setTimeout","Game","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","createValue","value","try","addMemo","memories","state","cpt","i","push","console","log","setState","cptTry","saveTry","nbFind","finishLvl","popMemo","item","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","toaster","danger","duration","tryCard","index","_this$state","success","asyncToGenerator","regenerator_default","a","mark","_callee","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","indexTry","wrap","_context","prev","t0","finish","stop","canvas","react_default","createElement","Pane","clearfix","memorie","elevation","float","width","height","margin","display","backgroundColor","justifyContent","alignItems","flexDirection","onClick","disabled","Heading","color","Text","marginTop","minorScale","lvl","_this2","Fragment","Button","appearance","intent","marginRight","Component","App","getIngo","isShown","className","Icon","icon","marginLeft","CornerDialog","title","onCloseComplete","href","target","rel","src_Game","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.92127256.chunk.js","sourcesContent":["// randomise un tableau\nconst shake = arr => {\n  for (let position = arr.length - 1; position >= 1; position--) {\n    let randomIndex = Math.floor(Math.random() * (position + 1));\n    [arr[position], arr[randomIndex]] = [arr[randomIndex], arr[position]];\n  }\n  return arr;\n};\n\n// retire les valeur n.x  du tableau\nconst reducedFilter = (data, keys, fn) =>\n  data.filter(fn).map(el =>\n    keys.reduce((acc, key) => {\n      acc[key] = el[key];\n      return acc;\n    }, {})\n  );\n\nconst sleep = milliseconds => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\n};\n\nexport { shake, reducedFilter, sleep };\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport { Button, Pane, Text, minorScale, toaster, Heading } from \"evergreen-ui\";\n\nimport { shake, reducedFilter, sleep } from \"./const\";\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      memories: [],\n      lvl: 0,\n      cptTry: 0,\n      saveTry: [],\n      nbFind: 0,\n      finishLvl: false\n    };\n  }\n\n  createValue = value => {\n    let obj = {\n      try: false,\n      value\n    };\n    return obj;\n  };\n\n  addMemo = () => {\n    let { memories } = this.state;\n    let cpt = memories.length / 2 + 1;\n    memories = [];\n\n    for (let i = 1; i < cpt + 1; i++) {\n      memories.push(this.createValue(i));\n      memories.push(this.createValue(i));\n    }\n    memories = shake(memories);\n    console.log(memories);\n    this.setState({\n      memories,\n      cptTry: 0,\n      saveTry: [],\n      nbFind: 0,\n      finishLvl: false\n    });\n    return memories;\n  };\n\n  popMemo = () => {\n    let { memories } = this.state;\n    let cpt = memories.length / 2;\n\n    if (cpt > 0) {\n      let data = Object.keys(memories[0]);\n      memories = reducedFilter(memories, data, item => item.value !== cpt);\n\n      for (let memo of memories) {\n        memo.try = false;\n      }\n      memories = shake(memories);\n      console.log(memories);\n\n      this.setState({\n        memories,\n        cptTry: 0,\n        saveTry: [],\n        nbFind: 0,\n        finishLvl: false\n      });\n    } else {\n      toaster.danger(\"ajoute d'abord un level\", {\n        duration: 5\n      });\n    }\n  };\n\n  tryCard = index => {\n    let { memories, cptTry, saveTry, nbFind, finishLvl } = this.state;\n    memories[index].try = true;\n    // tourner la card\n\n    saveTry.push(index);\n    cptTry++;\n    if (cptTry === 2) {\n      if (memories[saveTry[0]].value === memories[saveTry[1]].value) {\n        nbFind++;\n        if (nbFind === memories.length / 2) {\n          toaster.success(\"YOU WIN !!! \", {\n            duration: 5\n          });\n          finishLvl = true;\n        }\n        cptTry = 0;\n        saveTry = [];\n\n        this.setState({ saveTry, cptTry, nbFind, finishLvl });\n      } else {\n        this.setState({ memories }, async () => {\n          await sleep(1000);\n          for (let indexTry of saveTry) {\n            memories[indexTry].try = false;\n            // retourner la card\n          }\n          cptTry = 0;\n          saveTry = [];\n          this.setState({ memories, saveTry, cptTry });\n        });\n      }\n    } else {\n      this.setState({ memories, saveTry, cptTry });\n    }\n  };\n\n  canvas = () => {\n    let { memories } = this.state;\n    if (memories.length > 0) {\n      return (\n        <Pane clearfix>\n          {memories.map((memorie, index) => (\n            <Pane\n              key={index}\n              elevation={1}\n              float=\"left\"\n              width={200}\n              height={120}\n              margin={24}\n              display=\"flex\"\n              backgroundColor={memorie.try ? \"black\" : \"white\"}\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              flexDirection=\"column\"\n              onClick={() => this.tryCard(index)}\n              disabled={true}\n            >\n              <Heading color=\"white\">{memorie.try && memorie.value}</Heading>\n            </Pane>\n          ))}\n        </Pane>\n      );\n    } else {\n      return (\n        <Text marginTop={minorScale(3)}>\n          Augmente le level pour debuter la partie\n        </Text>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Pane>\n          <Button\n            appearance={this.state.finishLvl ? \"primary\" : \"default\"}\n            intent={this.state.finishLvl ? \"success\" : \"none\"}\n            marginRight={minorScale(3)}\n            onClick={() => this.addMemo()}\n          >\n            Next level\n          </Button>\n          <Button onClick={() => this.popMemo()}>Previous level</Button>\n        </Pane>\n        {this.canvas()}\n      </>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Game from \"./Game\";\nimport { Icon, CornerDialog, Text } from \"evergreen-ui\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShown: false\n    };\n  }\n  getIngo = () => {\n    console.log(\"dede\");\n    this.setState({ isShown: true });\n  };\n  render() {\n    return (\n      <div className=\"Game\">\n        <p>\n          Bonjour & bienvenu sur MemoApp\n          <Icon\n            icon=\"info-sign\"\n            color=\"info\"\n            marginLeft={16}\n            onClick={() => this.getIngo()}\n          />\n        </p>\n        <CornerDialog\n          title=\"Comment jouer ? \"\n          isShown={this.state.isShown}\n          onCloseComplete={() => this.setState({ isShown: false })}\n        >\n          <Text>\n            Ceci est un petit jeu de mémoire, le but est d'associer les paires.\n          </Text>\n          <Text> Un jeu simple de notre enfance.</Text>\n          <Text>\n            <a\n              href=\"https://github.com/JeremyNoh\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              (Voir mes autres réalisations)\n            </a>\n          </Text>\n        </CornerDialog>\n        <Game />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// <img src={logo} className=\"App-logo\" alt=\"logo\" />\n// <p>\n//   Edit <code>src/App.js</code> and save to reload.\n// </p>\n// <a\n//   className=\"App-link\"\n//   href=\"https://reactjs.org\"\n//   target=\"_blank\"\n//   rel=\"noopener noreferrer\"\n// >\n//   Learn React\n// </a>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["const/index.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["shake","arr","position","length","randomIndex","Math","floor","random","_ref","reducedFilter","data","keys","fn","filter","map","el","reduce","acc","key","sleep","milliseconds","Promise","resolve","setTimeout","createValue","value","try","resetValuePlayer","player","cptTry","saveTry","nbFind","findPair","faultForThisLvl","tabEmoji","Game","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addMemo","asyncToGenerator","regenerator_default","a","mark","_callee","_this$state","memories","tabEmojis","cpt","i","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","wrap","_context","prev","next","state","push","undefined","Symbol","iterator","done","t0","return","finish","finishLvl","setState","lvlPlayer","t1","stop","popMemo","_callee2","_this$state2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","_context2","item","toaster","danger","duration","resetMemo","_callee3","_this$state3","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_iterator5","_step5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_iterator6","_step6","_context3","nbFaute","tryCard","index","_this$state4","includes","success","_callee4","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_iterator7","_step7","indexTry","_context4","canvas","_this$state5","react_default","createElement","Pane","memorie","elevation","float","width","height","margin","display","backgroundColor","justifyContent","alignItems","flexDirection","onClick","disabled","style","border","Heading","color","size","Text","marginTop","minorScale","lessOneFault","easterEggsFound","notify","description","isFaute","Pill","onDoubleClick","window","innerWidth","innerHeight","_this2","Fragment","Button","appearance","intent","marginRight","Component","App","getInfo","isShown","className","Icon","icon","marginLeft","CornerDialog","title","onCloseComplete","href","target","rel","src_Game","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.edbd586d.chunk.js","sourcesContent":["// randomise un tableau\nconst shake = arr => {\n  for (let position = arr.length - 1; position >= 1; position--) {\n    let randomIndex = Math.floor(Math.random() * (position + 1));\n    [arr[position], arr[randomIndex]] = [arr[randomIndex], arr[position]];\n  }\n  return arr;\n};\n\n// retire les valeur n.x  du tableau\nconst reducedFilter = (data, keys, fn) =>\n  data.filter(fn).map(el =>\n    keys.reduce((acc, key) => {\n      acc[key] = el[key];\n      return acc;\n    }, {})\n  );\n\nconst sleep = milliseconds => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\n};\n\n// create the Value\nconst createValue = value => {\n  let obj = {\n    try: false,\n    value\n  };\n  return obj;\n};\n\nconst createValuePlayer = () => {\n  let player = {\n    saveTry: [],\n    findPair: [],\n    nbFind: 0,\n    finishLvl: true,\n    nbFaute: 0,\n    easterEggsFound: 0,\n    faultForThisLvl : 0,\n    lvlPlayer: 0,\n    cptTry: 0\n  }\n  return player;\n}\n\n\nconst resetValuePlayer = (player) =>{\n  player.cptTry = 0\n  player.saveTry = []\n  player.nbFind = 0\n  player.findPair = []\n  player.faultForThisLvl = 0\n  return player;\n}\n\n\nconst tabEmojiString = [\n  \"fas fa-angry\",\n  \"fas fa-dizzy\",\n  \"fas fa-flushed\",\n  \"fas fa-frown\",\n  \"fas fa-grimace\",\n  \"fas fa-grin\",\n  \"fas fa-grin-beam\",\n  \"fas fa-grin-beam-sweat\",\n  \"fas fa-grin-hearts\",\n  \"fas fa-grin-squint\",\n  \"fas fa-grin-squint-tears\",\n  \"fas fa-grin-stars\",\n  \"fas fa-grin-tears\",\n  \"fas fa-grin-tongue\",\n  \"fas fa-grin-tongue-wink\",\n  \"fas fa-grin-wink\",\n  \"fas fa-kiss\",\n  \"fas fa-kiss-wink-heart\",\n  \"fas fa-laugh\",\n  \"fas fa-laugh-beam\",\n  \"fas fa-laugh-squint\",\n  \"fas fa-laugh-wink\",\n  \"fas fa-meh\",\n  \"fas fa-meh-rolling-eyes\",\n  \"fas fa-sad-cry\",\n  \"fas fa-sad-tear\",\n  \"fas fa-heart\",\n  \"fas fa-star\",\n  \"fas fa-circle\",\n  \"fas fa-cloud\",\n  \"fas fa-apple-alt\"\n];\nconst tabEmoji = [\n  \"😁\",\n  \"😂\",\n  \"😅\",\n  \"😇\",\n  \"😉\",\n  \"🙂\",\n  \"😋\",\n  \"😍\",\n  \"😘\",\n  \"😗\",\n  \"😜\",\n  \"😎\",\n  \"😏\",\n  \"😶\",\n  \"😒\",\n  \"😳\",\n  \"😞\",\n  \"😟\",\n  \"😠\",\n  \"😡\",\n  \"😖\",\n  \"😤\",\n  \"😮\",\n  \"😱\",\n  \"😰\",\n  \"😧\",\n  \"😪\",\n  \"😭\",\n  \"😵\",\n  \"😷\",\n  \"😴\",\n  \"💩\",\n  \"😈\",\n  \"👿\",\n  \"😻\",\n  \"😼\",\n  \"😽\",\n  \"😹\",\n  \"😺\",\n  \"🙀\",\n  \"👍\",\n  \"👎\",\n  \"👏\",\n  \"💋\",\n  \"🤓\",\n  \"🥰\",\n  \"🥳\",\n  \"🥺\",\n  \"🤯\",\n  \"🤔\",\n  \"🤗\",\n  \"🤭\",\n  \"🤫\",\n  \"🙄\",\n  \"🥴\",\n  \"🤑\",\n  \"🙊\",\n  \"🙈\",\n  \"🙉\",\n  \"❤️\",\n  \"💚\",\n  \"💘\",\n  \"💜\"\n];\nexport { shake, reducedFilter, sleep, tabEmoji , createValue, createValuePlayer, resetValuePlayer};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport {\n  Button,\n  Pane,\n  Text,\n  minorScale,\n  toaster,\n  Heading,\n  Pill\n} from \"evergreen-ui\";\n\nimport { shake, reducedFilter, sleep, tabEmoji, createValue, createValuePlayer, resetValuePlayer } from \"./const\";\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: undefined,\n      height: undefined,\n      tabEmojis: [],\n      memories: [],\n      player : {} ,\n    };\n  }\n\n  componentDidMount() {\n    let tabEmojis = tabEmoji;\n    let player = createValuePlayer()\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight,\n      player,\n      tabEmojis\n    });\n  }\n\n\n  addMemo = async () => {\n    let { memories, tabEmojis, player} = this.state;\n    let cpt = memories.length / 2 + 1;\n    memories = [];\n\n\n    for (let i = 1; i < cpt + 1; i++) {\n      memories.push(createValue(i));\n      memories.push(createValue(i));\n    }\n    memories = shake(memories);\n    tabEmojis = shake(tabEmojis);\n    for (let memo of memories) {\n      memo.try = true;\n    }\n\n    player = resetValuePlayer(player)\n    player.finishLvl = false\n\n    this.setState({\n      memories,\n      tabEmojis,\n      player,\n    });\n    player.lvlPlayer++;\n\n    await sleep(1000 + 200 * player.lvlPlayer);\n    for (let memo of memories) {\n      memo.try = false;\n    }\n\n    this.setState({ memories, player });\n  };\n\n  popMemo = async() => {\n    let { memories, tabEmojis, player  } = this.state;\n    let cpt = memories.length / 2;\n\n    if (cpt > 0) {\n      let data = Object.keys(memories[0]);\n      memories = reducedFilter(memories, data, item => item.value !== cpt);\n\n      memories = shake(memories);\n      tabEmojis = shake(tabEmojis);\n\n\n      for (let memo of memories) {\n        memo.try = true;\n      }\n\n      player = resetValuePlayer(player)\n      player.finishLvl = true\n\n      this.setState({\n        memories,\n        tabEmojis,\n        player,\n      });\n\n      player.lvlPlayer--;\n      await sleep(1000 + 200 * player.lvlPlayer);\n      for (let memo of memories) {\n        memo.try = false;\n      }\n      this.setState({ memories, player });\n\n    } else {\n      toaster.danger(\"ajoute d'abord un level\", {\n        duration: 5\n      });\n    }\n  };\n\n  resetMemo = async () => {\n    let { memories, player } = this.state;\n      memories = shake(memories);\n\n      for (let memo of memories) {\n        memo.try = true;\n      }\n\n      player = resetValuePlayer(player)\n      player.finishLvl = false\n\n      this.setState({\n        memories,\n        player\n      });\n\n      player.nbFaute -= player.faultForThisLvl\n      await sleep(1000 + 200 * player.lvlPlayer);\n      for (let memo of memories) {\n        memo.try = false;\n      }\n      this.setState({ memories,player });\n\n  }\n\n  tryCard = index => {\n    let {\n      memories,\n      player\n    } = this.state;\n    if (player.cptTry > 1 || memories[index].try === true) {\n      // Si l'utilisateur appuis trop de fois ... ou appuies une card deja ouverte\n      return false;\n    }\n    if (player.saveTry[0] === index || player.findPair.includes(memories[index].value)) {\n      return false;\n    }\n\n    memories[index].try = true;\n    // tourner la card\n    player.saveTry.push(index);\n    player.cptTry++;\n\n    this.setState({ player });\n    if (player.cptTry === 2) {\n      if (memories[player.saveTry[0]].value === memories[player.saveTry[1]].value) {\n        player.nbFind++;\n        player.findPair.push(memories[player.saveTry[0]].value);\n        if (player.nbFind === memories.length / 2) {\n          toaster.success(\"YOU WIN !!! \", {\n            duration: 5\n          });\n          player.finishLvl = true;\n        }\n        player.cptTry = 0;\n        player.saveTry = [];\n\n        this.setState({ player });\n      } else {\n        this.setState({ memories }, async () => {\n          await sleep(1000);\n          for (let indexTry of player.saveTry) {\n            memories[indexTry].try = false;\n            // retourner la card\n          }\n          player.faultForThisLvl ++\n          player.nbFaute++;\n          player.cptTry = 0;\n          player.saveTry = [];\n          this.setState({ memories, player });\n        });\n      }\n    } else {\n      this.setState({ memories, player });\n    }\n  };\n\n  canvas = () => {\n    let { memories, tabEmojis } = this.state;\n    if (memories.length > 0) {\n      return (\n        <Pane>\n          {memories.map((memorie, index) => (\n            <Pane\n              key={index}\n              elevation={1}\n              float=\"left\"\n              width={this.state.width >= 600 ? 200 : 100}\n              height={this.state.width >= 600 ? 120 : 60}\n              margin={this.state.width >= 600 ? 24 : 12}\n              display=\"flex\"\n              backgroundColor={memorie.try ? \"black\" : \"white\"}\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              flexDirection=\"column\"\n              onClick={() => this.tryCard(index)}\n              disabled={true}\n              style={{\n                border: this.state.player.findPair.includes(memorie.value)\n                  ? \"1px solid green\"\n                  : \"\"\n              }}\n            >\n              <Heading color=\"white\" size={800}>\n                {memorie.try && tabEmojis[memorie.value]}\n              </Heading>\n            </Pane>\n          ))}\n        </Pane>\n      );\n    } else {\n      return (\n        <Text marginTop={minorScale(3)}>\n          Augmente le level pour debuter la partie\n        </Text>\n      );\n    }\n  };\n  lessOneFault = () => {\n    let { player} = this.state;\n    if (player.easterEggsFound === 0) {\n      player.easterEggsFound++;\n      this.setState({ player });\n      toaster.notify(\"Tu as trouvé un Easter Eggs Félicitation !!!\", {\n        duration: 7,\n        description:\n          \"Il y en a pleins d'autres bien cachés ! mais n'en abuse pas ... \"\n      });\n    }\n    player.nbFaute--;\n    this.setState({ player });\n  };\n\n  isFaute = () => {\n    let { player } = this.state\n    if (player.nbFaute === 0) {\n      return (\n        <Pill display=\"inline-flex\" color=\"green\" margin={8}>\n          Perfect\n        </Pill>\n      );\n    }\n    return (\n      <Pill\n        display=\"inline-flex\"\n        color=\"red\"\n        margin={8}\n        onDoubleClick={() => this.lessOneFault()}\n      >\n        Faute : {player.nbFaute}\n      </Pill>\n    );\n  };\n\n  render() {\n    let { player } = this.state\n    return (\n      <>\n        <Pane>\n          <Pill display=\"inline-flex\" margin={8}>\n            lvl : {player.lvlPlayer}\n          </Pill>\n          {player.lvlPlayer > 0 && this.isFaute()}\n        </Pane>\n        <Pane>\n          <Button\n            appearance={player.finishLvl ? \"primary\" : \"default\"}\n            intent={player.finishLvl ? \"success\" : \"none\"}\n            marginRight={minorScale(3)}\n            onClick={() => this.addMemo()}\n            disabled={!player.finishLvl}\n          >\n            Next level\n          </Button>\n          <Button marginRight={minorScale(3)} onClick={() => this.popMemo()}>Previous level</Button>\n          {player.lvlPlayer > 0 && <Button onClick={() => this.resetMemo()}   appearance=\"primary\" intent=\"danger\">Reset</Button>}\n        </Pane>\n        {this.canvas()}\n      </>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Game from \"./Game\";\nimport { Icon, CornerDialog, Text } from \"evergreen-ui\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShown: false\n    };\n  }\n  componentDidMount() {}\n\n  getInfo = () => {\n    this.setState({ isShown: true });\n  };\n\n  render() {\n    return (\n      <div className=\"Game\">\n        <p>\n          Bienvenue sur MemoApp\n          <Icon\n            icon=\"info-sign\"\n            color=\"info\"\n            marginLeft={16}\n            onClick={() => this.getInfo()}\n          />\n        </p>\n        <CornerDialog\n          title=\"Comment jouer ? \"\n          isShown={this.state.isShown}\n          onCloseComplete={() => this.setState({ isShown: false })}\n        >\n          <Text>\n            Ceci est un petit jeu de mémoire, le but est d'associer les paires.\n          </Text>\n          <Text> Un jeu simple de notre enfance.</Text>\n          <Text>\n            <a\n              href=\"https://github.com/JeremyNoh\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              (Voir mes autres réalisations)\n            </a>\n          </Text>\n        </CornerDialog>\n        <Game />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
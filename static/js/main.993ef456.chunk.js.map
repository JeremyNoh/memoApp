{"version":3,"sources":["const/index.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["shake","arr","position","length","randomIndex","Math","floor","random","_ref","reducedFilter","data","keys","fn","filter","map","el","reduce","acc","key","sleep","milliseconds","Promise","resolve","setTimeout","createValue","value","try","resetValuePlayer","player","cptTry","saveTry","nbFind","findPair","faultForThisLvl","tabEmoji","Game","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addMemo","asyncToGenerator","regenerator_default","a","mark","_callee","_this$state","memories","tabEmojis","cpt","i","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","wrap","_context","prev","next","state","push","undefined","Symbol","iterator","done","t0","return","finish","finishLvl","setState","lvlPlayer","t1","saveData","stop","popMemo","_callee2","_this$state2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","_context2","item","toaster","danger","duration","resetMemo","_callee3","_this$state3","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_iterator5","_step5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_iterator6","_step6","_context3","nbFaute","tryCard","index","_this$state4","includes","success","bonusSee","_callee4","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_iterator7","_step7","indexTry","_context4","canvas","_this$state5","react_default","createElement","Pane","memorie","elevation","float","width","height","margin","display","backgroundColor","justifyContent","alignItems","flexDirection","onClick","disabled","style","border","Heading","color","size","Fragment","Text","marginTop","minorScale","Button","recupValue","lessOneFault","easterEggsFound","notify","description","isFaute","Pill","onDoubleClick","isBonus","Badge","tryBonus","_callee5","_this$state6","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_iterator8","_step8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_iterator9","_step9","_memo4","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_iterator10","_step10","saveTryIndex","_context5","memo","t2","_this$state7","localStorage","setItem","JSON","stringify","_this$state8","playerTry","recupData","recupDataMemo","_this$state9","parse","getItem","DeleteData","_callee6","_context6","clear","window","location","reload","innerWidth","innerHeight","_this2","appearance","intent","marginRight","Component","App","getInfo","isShown","className","Icon","icon","marginLeft","CornerDialog","title","onCloseComplete","href","target","rel","src_Game","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.993ef456.chunk.js","sourcesContent":["// randomise un tableau\nconst shake = arr => {\n  for (let position = arr.length - 1; position >= 1; position--) {\n    let randomIndex = Math.floor(Math.random() * (position + 1));\n    [arr[position], arr[randomIndex]] = [arr[randomIndex], arr[position]];\n  }\n  return arr;\n};\n\n// retire les valeur n.x  du tableau\nconst reducedFilter = (data, keys, fn) =>\n  data.filter(fn).map(el =>\n    keys.reduce((acc, key) => {\n      acc[key] = el[key];\n      return acc;\n    }, {})\n  );\n\nconst sleep = milliseconds => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\n};\n\n// create the Value\nconst createValue = value => {\n  let obj = {\n    try: false,\n    value\n  };\n  return obj;\n};\n\nconst createValuePlayer = () => {\n  let player = {\n    saveTry: [],\n    findPair: [],\n    nbFind: 0,\n    finishLvl: true,\n    nbFaute: 0,\n    easterEggsFound: 0,\n    faultForThisLvl: 0,\n    lvlPlayer: 0,\n    cptTry: 0,\n    bonusSee: 0\n  };\n  return player;\n};\n\nconst resetValuePlayer = player => {\n  player.cptTry = 0;\n  player.saveTry = [];\n  player.nbFind = 0;\n  player.findPair = [];\n  player.faultForThisLvl = 0;\n  return player;\n};\n\nconst tabEmojiString = [\n  \"fas fa-angry\",\n  \"fas fa-dizzy\",\n  \"fas fa-flushed\",\n  \"fas fa-frown\",\n  \"fas fa-grimace\",\n  \"fas fa-grin\",\n  \"fas fa-grin-beam\",\n  \"fas fa-grin-beam-sweat\",\n  \"fas fa-grin-hearts\",\n  \"fas fa-grin-squint\",\n  \"fas fa-grin-squint-tears\",\n  \"fas fa-grin-stars\",\n  \"fas fa-grin-tears\",\n  \"fas fa-grin-tongue\",\n  \"fas fa-grin-tongue-wink\",\n  \"fas fa-grin-wink\",\n  \"fas fa-kiss\",\n  \"fas fa-kiss-wink-heart\",\n  \"fas fa-laugh\",\n  \"fas fa-laugh-beam\",\n  \"fas fa-laugh-squint\",\n  \"fas fa-laugh-wink\",\n  \"fas fa-meh\",\n  \"fas fa-meh-rolling-eyes\",\n  \"fas fa-sad-cry\",\n  \"fas fa-sad-tear\",\n  \"fas fa-heart\",\n  \"fas fa-star\",\n  \"fas fa-circle\",\n  \"fas fa-cloud\",\n  \"fas fa-apple-alt\"\n];\nconst tabEmoji = [\n  \"😁\",\n  \"😂\",\n  \"😅\",\n  \"😇\",\n  \"😉\",\n  \"🙂\",\n  \"😋\",\n  \"😍\",\n  \"😘\",\n  \"😗\",\n  \"😜\",\n  \"😎\",\n  \"😏\",\n  \"😶\",\n  \"😒\",\n  \"😳\",\n  \"😞\",\n  \"😟\",\n  \"😠\",\n  \"😡\",\n  \"😖\",\n  \"😤\",\n  \"😮\",\n  \"😱\",\n  \"😰\",\n  \"😧\",\n  \"😪\",\n  \"😭\",\n  \"😵\",\n  \"😷\",\n  \"😴\",\n  \"💩\",\n  \"😈\",\n  \"👿\",\n  \"😻\",\n  \"😼\",\n  \"😽\",\n  \"😹\",\n  \"😺\",\n  \"🙀\",\n  \"👍\",\n  \"👎\",\n  \"👏\",\n  \"💋\",\n  \"🤓\",\n  \"🥰\",\n  \"🥳\",\n  \"🥺\",\n  \"🤯\",\n  \"🤔\",\n  \"🤗\",\n  \"🤭\",\n  \"🤫\",\n  \"🙄\",\n  \"🥴\",\n  \"🤑\",\n  \"🙊\",\n  \"🙈\",\n  \"🙉\",\n  \"❤️\",\n  \"💚\",\n  \"💘\",\n  \"💜\"\n];\nexport {\n  shake,\n  reducedFilter,\n  sleep,\n  tabEmoji,\n  createValue,\n  createValuePlayer,\n  resetValuePlayer\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport {\n  Button,\n  Pane,\n  Text,\n  minorScale,\n  toaster,\n  Heading,\n  Pill,\n  Badge\n} from \"evergreen-ui\";\n\nimport {\n  shake,\n  reducedFilter,\n  sleep,\n  tabEmoji,\n  createValue,\n  createValuePlayer,\n  resetValuePlayer\n} from \"./const\";\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: undefined,\n      height: undefined,\n      tabEmojis: [],\n      memories: [],\n      player: {}\n    };\n  }\n\n  componentDidMount() {\n    let tabEmojis = tabEmoji;\n    let player = createValuePlayer();\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight,\n      player,\n      tabEmojis\n    });\n  }\n\n  addMemo = async () => {\n    let { memories, tabEmojis, player } = this.state;\n    let cpt = memories.length / 2 + 1;\n    memories = [];\n\n    for (let i = 1; i < cpt + 1; i++) {\n      memories.push(createValue(i));\n      memories.push(createValue(i));\n    }\n    memories = shake(memories);\n    tabEmojis = shake(tabEmojis);\n    for (let memo of memories) {\n      memo.try = true;\n    }\n\n    player = resetValuePlayer(player);\n    player.finishLvl = false;\n\n    this.setState({\n      memories,\n      tabEmojis,\n      player\n    });\n    player.lvlPlayer++;\n\n    await sleep(1000 + 200 * player.lvlPlayer);\n    for (let memo of memories) {\n      memo.try = false;\n    }\n\n    // enregistre les données  dans le localStorage\n    this.saveData();\n\n    this.setState({ memories, player });\n  };\n\n  popMemo = async () => {\n    let { memories, tabEmojis, player } = this.state;\n    let cpt = memories.length / 2;\n\n    if (cpt > 0) {\n      let data = Object.keys(memories[0]);\n      memories = reducedFilter(memories, data, item => item.value !== cpt);\n\n      memories = shake(memories);\n      tabEmojis = shake(tabEmojis);\n\n      for (let memo of memories) {\n        memo.try = true;\n      }\n\n      player = resetValuePlayer(player);\n      player.finishLvl = true;\n\n      this.setState({\n        memories,\n        tabEmojis,\n        player\n      });\n\n      player.lvlPlayer--;\n      await sleep(1000 + 200 * player.lvlPlayer);\n      for (let memo of memories) {\n        memo.try = false;\n      }\n      this.setState({ memories, player });\n    } else {\n      toaster.danger(\"ajoute d'abord un level\", {\n        duration: 5\n      });\n    }\n  };\n\n  resetMemo = async () => {\n    let { memories, player } = this.state;\n    memories = shake(memories);\n\n    for (let memo of memories) {\n      memo.try = true;\n    }\n\n    player.nbFaute -= player.faultForThisLvl;\n    player = resetValuePlayer(player);\n    player.finishLvl = false;\n\n    this.setState({\n      memories,\n      player\n    });\n\n    await sleep(1000 + 200 * player.lvlPlayer);\n    for (let memo of memories) {\n      memo.try = false;\n    }\n    this.setState({ memories, player });\n  };\n\n  tryCard = index => {\n    let { memories, player } = this.state;\n    if (player.cptTry > 1 || memories[index].try === true) {\n      // Si l'utilisateur appuis trop de fois ... ou appuies une card deja ouverte\n      return false;\n    }\n    if (\n      player.saveTry[0] === index ||\n      player.findPair.includes(memories[index].value)\n    ) {\n      return false;\n    }\n\n    memories[index].try = true;\n    // tourner la card\n    player.saveTry.push(index);\n    player.cptTry++;\n\n    this.setState({ player });\n    if (player.cptTry === 2) {\n      if (\n        memories[player.saveTry[0]].value === memories[player.saveTry[1]].value\n      ) {\n        player.nbFind++;\n        player.findPair.push(memories[player.saveTry[0]].value);\n        if (player.nbFind === memories.length / 2) {\n          toaster.success(\"YOU WIN !!! \", {\n            duration: 5\n          });\n          player.finishLvl = true;\n          //  ADD bonus if perfect\n          if (player.faultForThisLvl === 0) {\n            player.bonusSee++;\n          }\n        }\n        player.cptTry = 0;\n        player.saveTry = [];\n\n        this.setState({ player });\n      } else {\n        this.setState({ memories }, async () => {\n          await sleep(1000);\n          for (let indexTry of player.saveTry) {\n            memories[indexTry].try = false;\n            // retourner la card\n          }\n          player.faultForThisLvl++;\n          player.nbFaute++;\n          player.cptTry = 0;\n          player.saveTry = [];\n          this.setState({ memories, player });\n        });\n      }\n    } else {\n      this.setState({ memories, player });\n    }\n  };\n\n  canvas = () => {\n    let { memories, tabEmojis } = this.state;\n    if (memories.length > 0) {\n      return (\n        <Pane>\n          {memories.map((memorie, index) => (\n            <Pane\n              key={index}\n              elevation={1}\n              float=\"left\"\n              width={this.state.width >= 600 ? 200 : 100}\n              height={this.state.width >= 600 ? 120 : 60}\n              margin={this.state.width >= 600 ? 24 : 12}\n              display=\"flex\"\n              backgroundColor={memorie.try ? \"black\" : \"white\"}\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              flexDirection=\"column\"\n              onClick={() => this.tryCard(index)}\n              disabled={true}\n              style={{\n                border: this.state.player.findPair.includes(memorie.value)\n                  ? \"1px solid green\"\n                  : \"\"\n              }}\n            >\n              <Heading color=\"white\" size={800}>\n                {memorie.try && tabEmojis[memorie.value]}\n              </Heading>\n            </Pane>\n          ))}\n        </Pane>\n      );\n    } else {\n      return (\n        <>\n          <Text marginTop={minorScale(3)}>\n            Augmente le level pour debuter la partie\n          </Text>\n          <Button onClick={() => this.recupValue()}>\n            Recuperé ma derniere Partie\n          </Button>\n        </>\n      );\n    }\n  };\n  lessOneFault = () => {\n    let { player } = this.state;\n    if (player.easterEggsFound === 0) {\n      player.easterEggsFound++;\n      this.setState({ player });\n      toaster.notify(\"Tu as trouvé un Easter Eggs Félicitation !!!\", {\n        duration: 7,\n        description:\n          \"Il y en a pleins d'autres bien cachés ! mais n'en abuse pas ... \"\n      });\n    }\n    player.nbFaute--;\n    this.setState({ player });\n  };\n\n  isFaute = () => {\n    let { player } = this.state;\n    if (player.nbFaute === 0) {\n      return (\n        <Pill display=\"inline-flex\" color=\"green\" margin={8}>\n          Perfect\n        </Pill>\n      );\n    }\n    return (\n      <Pill\n        display=\"inline-flex\"\n        color=\"red\"\n        margin={8}\n        onDoubleClick={() => this.lessOneFault()}\n      >\n        Faute : {player.nbFaute}\n      </Pill>\n    );\n  };\n\n  isBonus = () => {\n    let { player } = this.state;\n    if (player.lvlPlayer > 0 && player.bonusSee > 0) {\n      return (\n        <Badge\n          display=\"inline-flex\"\n          color=\"teal\"\n          margin={8}\n          onClick={() => this.tryBonus()}\n        >\n          Bonus : {player.bonusSee}\n        </Badge>\n      );\n    }\n  };\n\n  tryBonus = async () => {\n    let { memories, player } = this.state;\n    for (let memo of memories) {\n      memo.try = true;\n    }\n    this.setState({ memories });\n    await sleep(1000 + 200 * player.lvlPlayer);\n    for (let memo of memories) {\n      if (player.findPair.includes(memo.value)) {\n        memo.try = true;\n      } else {\n        memo.try = false;\n      }\n    }\n    if (player.saveTry.length > 0) {\n      for (let saveTryIndex of player.saveTry) {\n        memories[saveTryIndex].try = true;\n      }\n    }\n    player.bonusSee -= 1;\n    this.setState({ memories, player });\n  };\n\n  saveData = () => {\n    let { player, memories } = this.state;\n    localStorage.setItem(\"player\", JSON.stringify(player));\n    localStorage.setItem(\"memories\", JSON.stringify(memories));\n  };\n\n  recupValue = () => {\n    let { player, memories } = this.state;\n    let playerTry = this.recupData();\n    if (playerTry === null) {\n      toaster.success(\"Tu n'as pas de derniere partie \", {\n        duration: 5\n      });\n    } else {\n      player = playerTry;\n      memories = this.recupDataMemo();\n    }\n    this.setState({ player, memories });\n  };\n\n  recupData = () => {\n    let { player, memories } = this.state;\n    player = JSON.parse(localStorage.getItem(\"player\"));\n    return player;\n  };\n\n  recupDataMemo = () => {\n    let { memories } = this.state;\n    memories = JSON.parse(localStorage.getItem(\"memories\"));\n    return memories;\n  };\n\n  DeleteData = async () => {\n    localStorage.clear();\n    toaster.notify(\"Donnée Supprimé \", {\n      duration: 2,\n      description: \"Tu vas être redirigé , Patience !!\"\n    });\n    await sleep(2000);\n    window.location.reload();\n  };\n\n  render() {\n    let { player } = this.state;\n    return (\n      <>\n        <Pane>\n          <Pill display=\"inline-flex\" margin={8}>\n            lvl : {player.lvlPlayer}\n          </Pill>\n          {this.isBonus()}\n          {player.lvlPlayer > 0 && this.isFaute()}\n        </Pane>\n        <Pane>\n          <Button\n            appearance={player.finishLvl ? \"primary\" : \"default\"}\n            intent={player.finishLvl ? \"success\" : \"none\"}\n            marginRight={minorScale(3)}\n            onClick={() => this.addMemo()}\n            disabled={!player.finishLvl}\n          >\n            Next level\n          </Button>\n          <Button marginRight={minorScale(3)} onClick={() => this.popMemo()}>\n            Previous level\n          </Button>\n          {player.lvlPlayer > 0 && (\n            <Button\n              onClick={() => this.resetMemo()}\n              appearance=\"primary\"\n              intent=\"warning\"\n            >\n              Retry\n            </Button>\n          )}\n        </Pane>\n        {this.canvas()}\n      </>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Game from \"./Game\";\nimport { Icon, CornerDialog, Text } from \"evergreen-ui\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShown: false\n    };\n  }\n  componentDidMount() {}\n\n  getInfo = () => {\n    this.setState({ isShown: true });\n  };\n\n  render() {\n    return (\n      <div className=\"Game\">\n        <p>\n          Bienvenue sur MemoApp\n          <Icon\n            icon=\"info-sign\"\n            color=\"info\"\n            marginLeft={16}\n            onClick={() => this.getInfo()}\n          />\n        </p>\n        <CornerDialog\n          title=\"Comment jouer ? \"\n          isShown={this.state.isShown}\n          onCloseComplete={() => this.setState({ isShown: false })}\n        >\n          <Text>\n            Ceci est un petit jeu de mémoire, le but est d'associer les paires.\n          </Text>\n          <Text> Un jeu simple de notre enfance.</Text>\n          <Text>\n            <a\n              href=\"https://github.com/JeremyNoh\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              (Voir mes autres réalisations)\n            </a>\n          </Text>\n        </CornerDialog>\n        <Game />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
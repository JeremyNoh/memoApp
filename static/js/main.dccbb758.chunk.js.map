{"version":3,"sources":["const/index.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["shake","arr","position","length","randomIndex","Math","floor","random","_ref","reducedFilter","data","keys","fn","filter","map","el","reduce","acc","key","sleep","milliseconds","Promise","resolve","setTimeout","createValue","value","try","tabEmoji","Game","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addMemo","asyncToGenerator","regenerator_default","a","mark","_callee","_this$state","memories","lvlPlayer","tabEmojis","faultForThisLvl","cpt","i","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","wrap","_context","prev","next","state","push","undefined","Symbol","iterator","done","t0","return","finish","setState","cptTry","saveTry","nbFind","finishLvl","findPair","t1","stop","popMemo","_callee2","_this$state2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","_context2","item","toaster","danger","duration","resetMemo","_callee3","_this$state3","nbFaute","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_iterator5","_step5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_iterator6","_step6","_context3","tryCard","index","_this$state4","includes","success","_callee4","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_iterator7","_step7","indexTry","_context4","canvas","_this$state5","react_default","createElement","Pane","memorie","elevation","float","width","height","margin","display","backgroundColor","justifyContent","alignItems","flexDirection","onClick","disabled","style","border","Heading","color","size","Text","marginTop","minorScale","lessOneFault","_this$state6","easterEggsFound","notify","description","isFaute","Pill","onDoubleClick","window","innerWidth","innerHeight","_this2","Fragment","Button","appearance","intent","marginRight","Component","App","getIngo","isShown","className","Icon","icon","marginLeft","CornerDialog","title","onCloseComplete","href","target","rel","src_Game","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dccbb758.chunk.js","sourcesContent":["// randomise un tableau\nconst shake = arr => {\n  for (let position = arr.length - 1; position >= 1; position--) {\n    let randomIndex = Math.floor(Math.random() * (position + 1));\n    [arr[position], arr[randomIndex]] = [arr[randomIndex], arr[position]];\n  }\n  return arr;\n};\n\n// retire les valeur n.x  du tableau\nconst reducedFilter = (data, keys, fn) =>\n  data.filter(fn).map(el =>\n    keys.reduce((acc, key) => {\n      acc[key] = el[key];\n      return acc;\n    }, {})\n  );\n\nconst sleep = milliseconds => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\n};\n\n// create the Value\nconst createValue = value => {\n  let obj = {\n    try: false,\n    value\n  };\n  return obj;\n};\n\n\nconst tabEmojiString = [\n  \"fas fa-angry\",\n  \"fas fa-dizzy\",\n  \"fas fa-flushed\",\n  \"fas fa-frown\",\n  \"fas fa-grimace\",\n  \"fas fa-grin\",\n  \"fas fa-grin-beam\",\n  \"fas fa-grin-beam-sweat\",\n  \"fas fa-grin-hearts\",\n  \"fas fa-grin-squint\",\n  \"fas fa-grin-squint-tears\",\n  \"fas fa-grin-stars\",\n  \"fas fa-grin-tears\",\n  \"fas fa-grin-tongue\",\n  \"fas fa-grin-tongue-wink\",\n  \"fas fa-grin-wink\",\n  \"fas fa-kiss\",\n  \"fas fa-kiss-wink-heart\",\n  \"fas fa-laugh\",\n  \"fas fa-laugh-beam\",\n  \"fas fa-laugh-squint\",\n  \"fas fa-laugh-wink\",\n  \"fas fa-meh\",\n  \"fas fa-meh-rolling-eyes\",\n  \"fas fa-sad-cry\",\n  \"fas fa-sad-tear\",\n  \"fas fa-heart\",\n  \"fas fa-star\",\n  \"fas fa-circle\",\n  \"fas fa-cloud\",\n  \"fas fa-apple-alt\"\n];\nconst tabEmoji = [\n  \"😁\",\n  \"😂\",\n  \"😅\",\n  \"😇\",\n  \"😉\",\n  \"🙂\",\n  \"😋\",\n  \"😍\",\n  \"😘\",\n  \"😗\",\n  \"😜\",\n  \"😎\",\n  \"😏\",\n  \"😶\",\n  \"😒\",\n  \"😳\",\n  \"😞\",\n  \"😟\",\n  \"😠\",\n  \"😡\",\n  \"😖\",\n  \"😤\",\n  \"😮\",\n  \"😱\",\n  \"😰\",\n  \"😧\",\n  \"😪\",\n  \"😭\",\n  \"😵\",\n  \"😷\",\n  \"😴\",\n  \"💩\",\n  \"😈\",\n  \"👿\",\n  \"😻\",\n  \"😼\",\n  \"😽\",\n  \"😹\",\n  \"😺\",\n  \"🙀\",\n  \"👍\",\n  \"👎\",\n  \"👏\",\n  \"💋\",\n  \"🤓\",\n  \"🥰\",\n  \"🥳\",\n  \"🥺\",\n  \"🤯\",\n  \"🤔\",\n  \"🤗\",\n  \"🤭\",\n  \"🤫\",\n  \"🙄\",\n  \"🥴\",\n  \"🤑\",\n  \"🙊\",\n  \"🙈\",\n  \"🙉\",\n  \"❤️\",\n  \"💚\",\n  \"💘\",\n  \"💜\"\n];\nexport { shake, reducedFilter, sleep, tabEmoji , createValue};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport {\n  Button,\n  Pane,\n  Text,\n  minorScale,\n  toaster,\n  Heading,\n  Pill\n} from \"evergreen-ui\";\n\nimport { shake, reducedFilter, sleep, tabEmoji, createValue } from \"./const\";\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: undefined,\n      height: undefined,\n      memories: [],\n      lvlPlayer: 0,\n      cptTry: 0,\n      saveTry: [],\n      findPair: [],\n      nbFind: 0,\n      finishLvl: true,\n      nbFaute: 0,\n      easterEggsFound: 0,\n      tabEmojis: [],\n      faultForThisLvl : 0\n    };\n  }\n\n  componentDidMount() {\n    let tabEmojis = tabEmoji;\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight,\n      tabEmojis\n    });\n  }\n\n\n  addMemo = async () => {\n    let { memories, lvlPlayer, tabEmojis, faultForThisLvl } = this.state;\n    let cpt = memories.length / 2 + 1;\n    memories = [];\n    lvlPlayer++;\n    faultForThisLvl = 0\n\n    for (let i = 1; i < cpt + 1; i++) {\n      memories.push(createValue(i));\n      memories.push(createValue(i));\n    }\n    memories = shake(memories);\n    tabEmojis = shake(tabEmojis);\n    for (let memo of memories) {\n      memo.try = true;\n    }\n\n    this.setState({\n      memories,\n      cptTry: 0,\n      saveTry: [],\n      nbFind: 0,\n      finishLvl: false,\n      findPair: [],\n      tabEmojis,\n      faultForThisLvl\n    });\n    await sleep(1000 + 200 * lvlPlayer);\n    for (let memo of memories) {\n      memo.try = false;\n    }\n\n    this.setState({ memories, lvlPlayer });\n  };\n\n  popMemo = async() => {\n    let { memories, lvlPlayer, tabEmojis, faultForThisLvl } = this.state;\n    let cpt = memories.length / 2;\n\n    if (cpt > 0) {\n      let data = Object.keys(memories[0]);\n      memories = reducedFilter(memories, data, item => item.value !== cpt);\n\n      memories = shake(memories);\n      tabEmojis = shake(tabEmojis);\n      lvlPlayer--;\nfaultForThisLvl = 0\n\n      for (let memo of memories) {\n        memo.try = true;\n      }\n\n      this.setState({\n        memories,\n        cptTry: 0,\n        saveTry: [],\n        nbFind: 0,\n        finishLvl: true,\n        findPair: [],\n        tabEmojis,\n        faultForThisLvl\n      });\n      await sleep(1000 + 200 * lvlPlayer);\n      for (let memo of memories) {\n        memo.try = false;\n      }\n      this.setState({ memories, lvlPlayer });\n\n    } else {\n      toaster.danger(\"ajoute d'abord un level\", {\n        duration: 5\n      });\n    }\n  };\n\n  resetMemo = async () => {\n    let { memories , lvlPlayer,nbFaute,  faultForThisLvl} = this.state;\n      memories = shake(memories);\n      nbFaute = nbFaute - faultForThisLvl\n      faultForThisLvl = 0\n\n      for (let memo of memories) {\n        memo.try = true;\n      }\n      this.setState({\n        cptTry: 0,\n        saveTry: [],\n        nbFind: 0,\n        memories,\n        findPair: [],\n        finishLvl : false\n      });\n      await sleep(1000 + 200 * lvlPlayer);\n      for (let memo of memories) {\n        memo.try = false;\n      }\n      this.setState({ memories, lvlPlayer, nbFaute, faultForThisLvl });\n\n  }\n\n  tryCard = index => {\n    let {\n      memories,\n      cptTry,\n      saveTry,\n      nbFind,\n      finishLvl,\n      findPair,\n      nbFaute,\n      faultForThisLvl\n    } = this.state;\n    if (cptTry > 1 || memories[index].try === true) {\n      // Si l'utilisateur appuis trop de fois ... ou appuies une card deja ouverte\n      return false;\n    }\n    if (saveTry[0] === index || findPair.includes(memories[index].value)) {\n      return false;\n    }\n\n    memories[index].try = true;\n    // tourner la card\n    saveTry.push(index);\n    cptTry++;\n\n    this.setState({ saveTry, cptTry });\n    if (cptTry === 2) {\n      if (memories[saveTry[0]].value === memories[saveTry[1]].value) {\n        nbFind++;\n        findPair.push(memories[saveTry[0]].value);\n        if (nbFind === memories.length / 2) {\n          toaster.success(\"YOU WIN !!! \", {\n            duration: 5\n          });\n          finishLvl = true;\n        }\n        cptTry = 0;\n        saveTry = [];\n\n        this.setState({ saveTry, cptTry, nbFind, finishLvl, findPair });\n      } else {\n        this.setState({ memories }, async () => {\n          await sleep(1000);\n          for (let indexTry of saveTry) {\n            memories[indexTry].try = false;\n            // retourner la card\n          }\n          faultForThisLvl ++\n          nbFaute++;\n          cptTry = 0;\n          saveTry = [];\n          this.setState({ memories, saveTry, cptTry, nbFaute, faultForThisLvl});\n        });\n      }\n    } else {\n      this.setState({ memories, saveTry, cptTry });\n    }\n  };\n\n  canvas = () => {\n    let { memories, tabEmojis } = this.state;\n    if (memories.length > 0) {\n      return (\n        <Pane>\n          {memories.map((memorie, index) => (\n            <Pane\n              key={index}\n              elevation={1}\n              float=\"left\"\n              width={this.state.width >= 600 ? 200 : 100}\n              height={this.state.width >= 600 ? 120 : 60}\n              margin={this.state.width >= 600 ? 24 : 12}\n              display=\"flex\"\n              backgroundColor={memorie.try ? \"black\" : \"white\"}\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              flexDirection=\"column\"\n              onClick={() => this.tryCard(index)}\n              disabled={true}\n              style={{\n                border: this.state.findPair.includes(memorie.value)\n                  ? \"1px solid green\"\n                  : \"\"\n              }}\n            >\n              <Heading color=\"white\" size={800}>\n                {memorie.try && tabEmojis[memorie.value]}\n              </Heading>\n            </Pane>\n          ))}\n        </Pane>\n      );\n    } else {\n      return (\n        <Text marginTop={minorScale(3)}>\n          Augmente le level pour debuter la partie\n        </Text>\n      );\n    }\n  };\n  lessOneFault = () => {\n    let { nbFaute, easterEggsFound } = this.state;\n    if (easterEggsFound === 0) {\n      easterEggsFound++;\n      this.setState({ easterEggsFound });\n      toaster.notify(\"Tu as trouvé un Easter Eggs Félicitation !!!\", {\n        duration: 7,\n        description:\n          \"Il y en a pleins d'autres bien cachés ! mais n'en abuse pas ... \"\n      });\n    }\n    nbFaute--;\n    this.setState({ nbFaute });\n  };\n\n  isFaute = () => {\n    if (this.state.nbFaute === 0) {\n      return (\n        <Pill display=\"inline-flex\" color=\"green\" margin={8}>\n          Perfect\n        </Pill>\n      );\n    }\n    return (\n      <Pill\n        display=\"inline-flex\"\n        color=\"red\"\n        margin={8}\n        onDoubleClick={() => this.lessOneFault()}\n      >\n        Faute : {this.state.nbFaute}\n      </Pill>\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <Pane>\n          <Pill display=\"inline-flex\" margin={8}>\n            lvl : {this.state.lvlPlayer}\n          </Pill>\n          {this.state.lvlPlayer > 0 && this.isFaute()}\n        </Pane>\n        <Pane>\n          <Button\n            appearance={this.state.finishLvl ? \"primary\" : \"default\"}\n            intent={this.state.finishLvl ? \"success\" : \"none\"}\n            marginRight={minorScale(3)}\n            onClick={() => this.addMemo()}\n            disabled={!this.state.finishLvl}\n          >\n            Next level\n          </Button>\n          <Button marginRight={minorScale(3)} onClick={() => this.popMemo()}>Previous level</Button>\n          {this.state.lvlPlayer > 0 && <Button onClick={() => this.resetMemo()}   appearance=\"primary\" intent=\"danger\">Reset</Button>}\n        </Pane>\n        {this.canvas()}\n      </>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Game from \"./Game\";\nimport { Icon, CornerDialog, Text } from \"evergreen-ui\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShown: false\n    };\n  }\n  componentDidMount() {}\n\n  getIngo = () => {\n    this.setState({ isShown: true });\n  };\n\n  render() {\n    return (\n      <div className=\"Game\">\n        <p>\n          Bienvenu sur MemoApp\n          <Icon\n            icon=\"info-sign\"\n            color=\"info\"\n            marginLeft={16}\n            onClick={() => this.getIngo()}\n          />\n        </p>\n        <CornerDialog\n          title=\"Comment jouer ? \"\n          isShown={this.state.isShown}\n          onCloseComplete={() => this.setState({ isShown: false })}\n        >\n          <Text>\n            Ceci est un petit jeu de mémoire, le but est d'associer les paires.\n          </Text>\n          <Text> Un jeu simple de notre enfance.</Text>\n          <Text>\n            <a\n              href=\"https://github.com/JeremyNoh\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              (Voir mes autres réalisations)\n            </a>\n          </Text>\n        </CornerDialog>\n        <Game />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// <img src={logo} className=\"App-logo\" alt=\"logo\" />\n// <p>\n//   Edit <code>src/App.js</code> and save to reload.\n// </p>\n// <a\n//   className=\"App-link\"\n//   href=\"https://reactjs.org\"\n//   target=\"_blank\"\n//   rel=\"noopener noreferrer\"\n// >\n//   Learn React\n// </a>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}